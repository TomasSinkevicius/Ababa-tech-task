{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\nexport const useAuth = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n    setIsLoading(true);\n\n    try {\n      var _response$data;\n\n      const response = await axios.post(\"http://localhost:3333/auth/local/signin\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token, {\n        path: \"/\",\n        expires: d\n      });\n      dispatch(setCredentials({ ...(response === null || response === void 0 ? void 0 : response.data)\n      }));\n      setIsLoading(false);\n      navigate(\"/\");\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n    } catch (err) {\n      var _err$response;\n\n      setIsLoading(false);\n\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  const signup = async _ref2 => {\n    let {\n      username,\n      password\n    } = _ref2;\n\n    try {\n      var _response$data2;\n\n      const response = await axios.post(\"http://localhost:3333/auth/local/signup\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.access_token, {\n        path: \"/\",\n        expires: d\n      });\n      dispatch(setCredentials({ ...(response === null || response === void 0 ? void 0 : response.data)\n      }));\n      navigate(\"/\");\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n    } catch (err) {\n      var _err$response2;\n\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  return {\n    isLoading,\n    errorMsg,\n    signin,\n    signup\n  };\n};\n\n_s(useAuth, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n\nconst authApi = async _ref3 => {\n  _s2();\n\n  let {\n    type,\n    username,\n    password\n  } = _ref3;\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  try {\n    var _response$data3;\n\n    const response = await axios.post(\"http://localhost:3333/auth/local/signup\", JSON.stringify({\n      username,\n      password\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const d = new Date();\n    d.setMinutes(d.getMinutes() + 15);\n    cookies.set(\"token\", response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.access_token, {\n      path: \"/\",\n      expires: d\n    });\n    dispatch(setCredentials({ ...(response === null || response === void 0 ? void 0 : response.data)\n    }));\n    navigate(\"/\");\n    console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n  } catch (err) {\n    var _err$response3;\n\n    if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n      setErrorMsg(\"Wrong username or password\");\n    } else {\n      setErrorMsg(\"Login failed\");\n    }\n  }\n};\n\n_s2(authApi, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});","map":{"version":3,"names":["axios","useState","useDispatch","useNavigate","Cookies","setCredentials","useAuth","isLoading","setIsLoading","signin","username","password","response","post","JSON","stringify","headers","d","Date","setMinutes","getMinutes","cookies","set","data","access_token","path","expires","dispatch","navigate","console","log","err","status","setErrorMsg","signup","errorMsg","authApi","type"],"sources":["/Users/tomas/Documents/Github/ababa-task/client/src/hooks/useAuth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\n\ninterface User {\n  username: string;\n  password: string;\n}\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async ({ username, password }: User) => {\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:3333/auth/local/signin\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response?.data?.access_token, {\n        path: \"/\",\n        expires: d,\n      });\n      dispatch(setCredentials({ ...response?.data }));\n      setIsLoading(false);\n      navigate(\"/\");\n      console.log(JSON.stringify(response?.data));\n    } catch (err: any) {\n      setIsLoading(false);\n\n      if (err.response?.status === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  const signup = async ({ username, password }: User) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:3333/auth/local/signup\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response?.data?.access_token, {\n        path: \"/\",\n        expires: d,\n      });\n      dispatch(setCredentials({ ...response?.data }));\n      navigate(\"/\");\n      console.log(JSON.stringify(response?.data));\n    } catch (err: any) {\n      if (err.response?.status === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  return { isLoading, errorMsg, signin, signup };\n};\n\nconst authApi = async ({\n  type,\n  username,\n  password,\n}: {\n  type: string;\n  username: string;\n  password: string;\n}) => {\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  try {\n    const response = await axios.post(\n      \"http://localhost:3333/auth/local/signup\",\n      JSON.stringify({ username, password }),\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const d = new Date();\n    d.setMinutes(d.getMinutes() + 15);\n    cookies.set(\"token\", response?.data?.access_token, {\n      path: \"/\",\n      expires: d,\n    });\n    dispatch(setCredentials({ ...response?.data }));\n    navigate(\"/\");\n    console.log(JSON.stringify(response?.data));\n  } catch (err: any) {\n    if (err.response?.status === 403) {\n      setErrorMsg(\"Wrong username or password\");\n    } else {\n      setErrorMsg(\"Login failed\");\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}