{"ast":null,"code":"var _jsxFileName = \"/Users/tomas/Documents/Github/ababa-task/client/src/components/movies-list/movies-list.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal } from \"../modal\";\nimport { MovieCard } from \"../movie-card\";\nimport { moviesData } from \"./movies-data\";\nimport styles from \"./movies-list.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  releaseYear: 0,\n  runtime: 0,\n  genre: \"\",\n  trailer: \"\",\n  image: \"\",\n  moreInformation: \"\"\n};\nexport const MoviesList = () => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeMovie, setActiveMovie] = useState(initialValues);\n  const movies = moviesData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.movies,\n          children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie,\n            setIsModalVisible: setIsModalVisible,\n            setActiveMovie: setActiveMovie\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      setIsModalVisible: setIsModalVisible,\n      isModalVisible: isModalVisible,\n      data: activeMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MoviesList, \"enW6JnoCMXqVB9t0ODxzuViJIP0=\");\n\n_c = MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","useState","Modal","MovieCard","moviesData","styles","initialValues","title","description","releaseYear","runtime","genre","trailer","image","moreInformation","MoviesList","isModalVisible","setIsModalVisible","activeMovie","setActiveMovie","movies","wrapper","container","map","movie","index"],"sources":["/Users/tomas/Documents/Github/ababa-task/client/src/components/movies-list/movies-list.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { IMovie } from \"../interfaces/movie.interface\";\nimport { Modal } from \"../modal\";\nimport { MovieCard } from \"../movie-card\";\nimport { moviesData } from \"./movies-data\";\nimport styles from \"./movies-list.module.scss\";\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  releaseYear: 0,\n  runtime: 0,\n  genre: \"\",\n  trailer: \"\",\n  image: \"\",\n  moreInformation: \"\",\n};\n\nexport const MoviesList = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeMovie, setActiveMovie] = useState<IMovie>(initialValues);\n\n  const movies = moviesData;\n  return (\n    <>\n      <div className={styles.wrapper}>\n        <div className={styles.container}>\n          <div className={styles.movies}>\n            {movies.map((movie, index) => (\n              <MovieCard\n                key={index}\n                movie={movie}\n                setIsModalVisible={setIsModalVisible}\n                setActiveMovie={setActiveMovie}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <Modal\n        setIsModalVisible={setIsModalVisible}\n        isModalVisible={isModalVisible}\n        data={activeMovie}\n      />\n    </>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa;EAEpBC,WAAW,EAAE,EAFO;EAGpBC,WAAW,EAAE,CAHO;EAIpBC,OAAO,EAAE,CAJW;EAKpBC,KAAK,EAAE,EALa;EAMpBC,OAAO,EAAE,EANW;EAOpBC,KAAK,EAAE,EAPa;EAQpBC,eAAe,EAAE;AARG,CAAtB;AAWA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;EACA,MAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAASK,aAAT,CAA9C;EAEA,MAAMc,MAAM,GAAGhB,UAAf;EACA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAEC,MAAM,CAACgB,OAAvB;MAAA,uBACE;QAAK,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;QAAA,uBACE;UAAK,SAAS,EAAEjB,MAAM,CAACe,MAAvB;UAAA,UACGA,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACV,QAAC,SAAD;YAEE,KAAK,EAAED,KAFT;YAGE,iBAAiB,EAAEP,iBAHrB;YAIE,cAAc,EAAEE;UAJlB,GACOM,KADP;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAeE,QAAC,KAAD;MACE,iBAAiB,EAAER,iBADrB;MAEE,cAAc,EAAED,cAFlB;MAGE,IAAI,EAAEE;IAHR;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA,gBADF;AAuBD,CA5BM;;GAAMH,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}