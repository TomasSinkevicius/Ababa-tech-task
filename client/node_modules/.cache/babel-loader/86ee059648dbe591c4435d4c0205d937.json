{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { setCredentials } from \"../features/auth/authSlice\";\nexport const useAuth = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n    setIsLoading(true);\n    authApi(\"signin\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async _ref2 => {\n    let {\n      username,\n      password\n    } = _ref2;\n    authApi(\"signup\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const authApi = async _ref3 => {\n    let {\n      type,\n      username,\n      password,\n      errorMsg\n    } = _ref3;\n\n    try {\n      var _response$data;\n\n      const response = await axios.post(`http://localhost:3333/auth/local/${type}`, JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token, {\n        path: \"/\",\n        expires: d\n      });\n      dispatch(setCredentials({ ...(response === null || response === void 0 ? void 0 : response.data)\n      }));\n      navigate(\"/\");\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n    } catch (err) {\n      var _err$response;\n\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  return {\n    isLoading,\n    errorMsg,\n    signin,\n    signup\n  };\n};\n\n_s(useAuth, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");","map":{"version":3,"names":["axios","useState","setCredentials","useAuth","isLoading","setIsLoading","signin","username","password","authApi","signup","type","errorMsg","response","post","JSON","stringify","headers","d","Date","setMinutes","getMinutes","cookies","set","data","access_token","path","expires","dispatch","navigate","console","log","err","status","setErrorMsg"],"sources":["/Users/tomas/Documents/Github/ababa-task/client/src/hooks/useAuth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\n\ninterface User {\n  username: string;\n  password: string;\n}\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async ({ username, password }: User) => {\n    setIsLoading(true);\n\n    authApi(\"signin\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async ({ username, password }: User) => {\n    authApi(\"signup\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const authApi = async ({\n    type,\n    username,\n    password,\n    errorMsg,\n  }: {\n    type: string;\n    username: string;\n    password: string;\n  }) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:3333/auth/local/${type}`,\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n      const d = new Date();\n      d.setMinutes(d.getMinutes() + 15);\n      cookies.set(\"token\", response?.data?.access_token, {\n        path: \"/\",\n        expires: d,\n      });\n      dispatch(setCredentials({ ...response?.data }));\n      navigate(\"/\");\n      console.log(JSON.stringify(response?.data));\n    } catch (err: any) {\n      if (err.response?.status === 403) {\n        setErrorMsg(\"Wrong username or password\");\n      } else {\n        setErrorMsg(\"Login failed\");\n      }\n    }\n  };\n\n  return { isLoading, errorMsg, signin, signup };\n};\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAIA,SAASC,cAAT,QAA+B,4BAA/B;AAOA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMK,MAAM,GAAG,cAAwC;IAAA,IAAjC;MAAEC,QAAF;MAAYC;IAAZ,CAAiC;IACrDH,YAAY,CAAC,IAAD,CAAZ;IAEAI,OAAO,CAAC,QAAD,EAAWF,QAAX,EAAqBC,QAArB,CAAP,CAHqD,CAKrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;EACD,CAhCD;;EAkCA,MAAME,MAAM,GAAG,eAAwC;IAAA,IAAjC;MAAEH,QAAF;MAAYC;IAAZ,CAAiC;IACrDC,OAAO,CAAC,QAAD,EAAWF,QAAX,EAAqBC,QAArB,CAAP,CADqD,CAGrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CA3BD;;EA6BA,MAAMC,OAAO,GAAG,eASV;IAAA,IATiB;MACrBE,IADqB;MAErBJ,QAFqB;MAGrBC,QAHqB;MAIrBI;IAJqB,CASjB;;IACJ,IAAI;MAAA;;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAN,CACpB,oCAAmCH,IAAK,EADpB,EAErBI,IAAI,CAACC,SAAL,CAAe;QAAET,QAAF;QAAYC;MAAZ,CAAf,CAFqB,EAGrB;QACES,OAAO,EAAE;UAAE,gBAAgB;QAAlB;MADX,CAHqB,CAAvB;MAOA,MAAMC,CAAC,GAAG,IAAIC,IAAJ,EAAV;MACAD,CAAC,CAACE,UAAF,CAAaF,CAAC,CAACG,UAAF,KAAiB,EAA9B;MACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,QAArB,aAAqBA,QAArB,yCAAqBA,QAAQ,CAAEW,IAA/B,mDAAqB,eAAgBC,YAArC,EAAmD;QACjDC,IAAI,EAAE,GAD2C;QAEjDC,OAAO,EAAET;MAFwC,CAAnD;MAIAU,QAAQ,CAAC1B,cAAc,CAAC,EAAE,IAAGW,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEW,IAAb;MAAF,CAAD,CAAf,CAAR;MACAK,QAAQ,CAAC,GAAD,CAAR;MACAC,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACC,SAAL,CAAeH,QAAf,aAAeA,QAAf,uBAAeA,QAAQ,CAAEW,IAAzB,CAAZ;IACD,CAjBD,CAiBE,OAAOQ,GAAP,EAAiB;MAAA;;MACjB,IAAI,kBAAAA,GAAG,CAACnB,QAAJ,gEAAcoB,MAAd,MAAyB,GAA7B,EAAkC;QAChCC,WAAW,CAAC,4BAAD,CAAX;MACD,CAFD,MAEO;QACLA,WAAW,CAAC,cAAD,CAAX;MACD;IACF;EACF,CAlCD;;EAoCA,OAAO;IAAE9B,SAAF;IAAaQ,QAAb;IAAuBN,MAAvB;IAA+BI;EAA/B,CAAP;AACD,CAvGM;;GAAMP,O"},"metadata":{},"sourceType":"module"}