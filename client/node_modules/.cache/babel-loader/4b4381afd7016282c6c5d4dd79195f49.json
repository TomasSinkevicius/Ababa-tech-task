{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useAuth = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n    setIsLoading(true);\n    authApi(\"signin\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async _ref2 => {\n    let {\n      username,\n      password\n    } = _ref2;\n    authApi(\"signup\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  return {\n    isLoading,\n    errorMsg,\n    signin,\n    signup\n  };\n};\n\n_s(useAuth, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");","map":{"version":3,"names":["useState","useAuth","isLoading","setIsLoading","signin","username","password","authApi","signup","errorMsg"],"sources":["/Users/tomas/Documents/Github/ababa-task/client/src/hooks/useAuth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\n\ninterface User {\n  username: string;\n  password: string;\n}\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async ({ username, password }: User) => {\n    setIsLoading(true);\n\n    authApi(\"signin\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async ({ username, password }: User) => {\n    authApi(\"signup\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  return { isLoading, errorMsg, signin, signup };\n};\n"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AAWA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMI,MAAM,GAAG,cAAwC;IAAA,IAAjC;MAAEC,QAAF;MAAYC;IAAZ,CAAiC;IACrDH,YAAY,CAAC,IAAD,CAAZ;IAEAI,OAAO,CAAC,QAAD,EAAWF,QAAX,EAAqBC,QAArB,CAAP,CAHqD,CAKrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;EACD,CAhCD;;EAkCA,MAAME,MAAM,GAAG,eAAwC;IAAA,IAAjC;MAAEH,QAAF;MAAYC;IAAZ,CAAiC;IACrDC,OAAO,CAAC,QAAD,EAAWF,QAAX,EAAqBC,QAArB,CAAP,CADqD,CAGrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CA3BD;;EA6BA,OAAO;IAAEJ,SAAF;IAAaO,QAAb;IAAuBL,MAAvB;IAA+BI;EAA/B,CAAP;AACD,CAnEM;;GAAMP,O"},"metadata":{},"sourceType":"module"}