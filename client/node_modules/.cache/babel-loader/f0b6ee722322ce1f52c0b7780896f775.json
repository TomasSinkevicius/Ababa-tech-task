{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\nexport const useAuth = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async _ref => {\n    let {\n      username,\n      password\n    } = _ref;\n    setIsLoading(true);\n    authApi(\"signin\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async _ref2 => {\n    let {\n      username,\n      password\n    } = _ref2;\n    authApi(\"signup\", username, password); // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  return {\n    isLoading,\n    errorMsg,\n    signin,\n    signup\n  };\n};\n\n_s(useAuth, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n\nconst authApi = async _ref3 => {\n  _s2();\n\n  let {\n    type,\n    username,\n    password\n  } = _ref3;\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  try {\n    var _response$data;\n\n    const response = await axios.post(`http://localhost:3333/auth/local/${type}`, JSON.stringify({\n      username,\n      password\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const d = new Date();\n    d.setMinutes(d.getMinutes() + 15);\n    cookies.set(\"token\", response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token, {\n      path: \"/\",\n      expires: d\n    });\n    dispatch(setCredentials({ ...(response === null || response === void 0 ? void 0 : response.data)\n    }));\n    navigate(\"/\");\n    console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n  } catch (err) {\n    var _err$response;\n\n    if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403) {\n      setErrorMsg(\"Wrong username or password\");\n    } else {\n      setErrorMsg(\"Login failed\");\n    }\n  }\n};\n\n_s2(authApi, \"wCDI24ZGSfoeCojGgaxTBmbsesM=\", false, function () {\n  return [useDispatch, useNavigate];\n});","map":{"version":3,"names":["axios","useState","useDispatch","useNavigate","Cookies","setCredentials","useAuth","isLoading","setIsLoading","signin","username","password","authApi","signup","errorMsg","type","cookies","dispatch","navigate","setErrorMsg","response","post","JSON","stringify","headers","d","Date","setMinutes","getMinutes","set","data","access_token","path","expires","console","log","err","status"],"sources":["/Users/tomas/Documents/Github/ababa-task/client/src/hooks/useAuth.ts"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nimport { setCredentials } from \"../features/auth/authSlice\";\n\ninterface User {\n  username: string;\n  password: string;\n}\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const signin = async ({ username, password }: User) => {\n    setIsLoading(true);\n\n    authApi(\"signin\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signin\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   setIsLoading(false);\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   setIsLoading(false);\n\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  const signup = async ({ username, password }: User) => {\n    authApi(\"signup\", username, password);\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:3333/auth/local/signup\",\n    //     JSON.stringify({ username, password }),\n    //     {\n    //       headers: { \"Content-Type\": \"application/json\" },\n    //     }\n    //   );\n    //   const d = new Date();\n    //   d.setMinutes(d.getMinutes() + 15);\n    //   cookies.set(\"token\", response?.data?.access_token, {\n    //     path: \"/\",\n    //     expires: d,\n    //   });\n    //   dispatch(setCredentials({ ...response?.data }));\n    //   navigate(\"/\");\n    //   console.log(JSON.stringify(response?.data));\n    // } catch (err: any) {\n    //   if (err.response?.status === 403) {\n    //     setErrorMsg(\"Wrong username or password\");\n    //   } else {\n    //     setErrorMsg(\"Login failed\");\n    //   }\n    // }\n  };\n\n  return { isLoading, errorMsg, signin, signup };\n};\n\nconst authApi = async ({\n  type,\n  username,\n  password,\n}: {\n  type: string;\n  username: string;\n  password: string;\n}) => {\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  try {\n    const response = await axios.post(\n      `http://localhost:3333/auth/local/${type}`,\n      JSON.stringify({ username, password }),\n      {\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n    const d = new Date();\n    d.setMinutes(d.getMinutes() + 15);\n    cookies.set(\"token\", response?.data?.access_token, {\n      path: \"/\",\n      expires: d,\n    });\n    dispatch(setCredentials({ ...response?.data }));\n    navigate(\"/\");\n    console.log(JSON.stringify(response?.data));\n  } catch (err: any) {\n    if (err.response?.status === 403) {\n      setErrorMsg(\"Wrong username or password\");\n    } else {\n      setErrorMsg(\"Login failed\");\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}